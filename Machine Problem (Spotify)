using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Machine_Problem__spotify_
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Dictionary<int, List<string>> dSample = new Dictionary<int, List<string>>();
            List<string> samples = new List<string>();
            List<string> things = new List<string>();
            List<int> nurandom = new List<int> { };
            List<int> random = new List<int> { };
            List<string> forks = new List<string> { };
            string[] temp = new string[] { };
            Random rnd = new Random();
            int bro = 0;
            int bigbro = 0;
            int choice = 0;
            int songID = 0;
            int tempnum = 0;
            string inputfile = "top10000songs.csv";
            string line = "";
            string mergeThing = "";

            //merger
            using (StreamReader sr = new StreamReader(inputfile))
            {
                while ((line = sr.ReadLine()) != null)
                {
                    samples.Add(line);
                }
            }


            foreach (string sample in samples)
            {
                temp = sample.Split(',');
                foreach (string t in temp)
                    songID = int.Parse(temp[0]);
                things = new List<string>();

                if (temp.Length == 4)
                {
                    for (int x = 1; x < temp.Length; x++)
                    {
                        things.Add(temp[x]);
                    }
                }
                else
                {
                    mergeThing = "";
                    for (int x = 1; x < temp.Length; x++)
                    {
                        if (temp[x][0] == '"')
                        {
                            if (mergeThing.Length > 0)
                            {
                                things.Add(mergeThing);
                                mergeThing = "";
                            }
                            mergeThing += temp[x];
                        }
                        else if (temp[x][0] == ' ')
                        {
                            if (mergeThing.Length > 0)
                            {
                                mergeThing += ",";
                            }
                            mergeThing += temp[x];
                        }
                        else if ((int)temp[x][0] >= 48 && (int)temp[x][0] <= 57)
                        {
                            if (mergeThing.Length > 0)
                            {
                                mergeThing += ",";
                                mergeThing += temp[x];
                            }
                            else
                                things.Add(temp[x]);

                        }
                        else
                        {
                            if (mergeThing.Length > 0)
                            {
                                things.Add(mergeThing);
                                mergeThing = "";
                            }

                            things.Add(temp[x]);
                        }

                        if (temp[x][temp[x].Length - 1] == '"')
                            if (mergeThing.Length > 0)
                            {
                                things.Add(mergeThing);
                                mergeThing = "";
                            }

                    }
                }
                dSample[songID] = things;
            }


            Console.WriteLine("    Menu");
            Console.WriteLine("=============\n[1] Shuffle list\n[2] Search by song title\n[3] Search by artist name");
            choice = int.Parse(Console.ReadLine());

            //shufflezz my man
            Console.Clear();
            if (choice == 1)
            {
                Console.WriteLine("Shuffling songs, please wait....");
                for (int m = 0; m < dSample.Count; m++)
                    nurandom.Add(m);

                bigbro = dSample.Count;

                using (StreamWriter sw = new StreamWriter("shuffled." + inputfile))
                {

                    for (int x = 0; x < bigbro; x++)
                    {
                        bro = rnd.Next(0, nurandom.Count);
                        tempnum = nurandom[bro];
                        sw.WriteLine(dSample.ElementAt(tempnum).Key + " | " + dSample.ElementAt(tempnum).Value[0] + " | " + dSample.ElementAt(tempnum).Value[1] + " | " + dSample.ElementAt(tempnum).Value[2]); //dSample.ElementAt(tempnum).Key //dSample[tempnum][0]
                        nurandom.Remove(bro);
                    }
                }
                Console.WriteLine("Songs Shuffled!");
            }

            //find song thru title
            string uInput = "";
            if (choice == 2)
            {
                Console.WriteLine("Input song name here: ");
                uInput = Console.ReadLine();
                Console.Clear();
                Console.WriteLine("Getting data....\n");

                for (int y = 0; y < dSample.Count; y++)
                {
                    if (dSample.ElementAt(y).Value[1] == uInput)
                    {
                        Console.Write("Song place: " + dSample.ElementAt(y).Key + "\nSong Title: " + dSample.ElementAt(y).Value[1] + "\nArtist: " + dSample.ElementAt(y).Value[0] + "\nDate released: " + dSample.ElementAt(y).Value[2]);
                        Console.Write("\n=============================\n");                        
                    }
                }
                Console.WriteLine("Done!");

            }

            //find song thru artist name
            uInput = "";
            if (choice == 3)
            {
                Console.WriteLine("Input artist name here: ");
                uInput = Console.ReadLine();
                Console.Clear();
                Console.WriteLine("Fetching songs, please wait...");

                using (StreamWriter sw = new StreamWriter(uInput + " songs.csv"))
                {
                    sw.WriteLine("Songs by " + uInput + "\n");

                    for (int z = 0; z < dSample.Count; z++)
                    {
                        if (dSample.ElementAt(z).Value[0] == uInput)
                        {
                            //Console.Write("Songs by " + dSample.ElementAt(z).Value[0]);
                            sw.WriteLine(dSample.ElementAt(z).Value[1]);
                        }
                    }
                }
                Console.WriteLine("Songs have been compiled!");

            }

            Console.ReadKey();
        }
    }
}
