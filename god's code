using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.Design;
using System.Data.SqlTypes;
using System.Diagnostics.Contracts;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace GOD_S_CODE
{
    internal class Program                              
    {
        /// <summary>
        /// new plan: generate a number, check row, column and 3x3 then put, else remove from list.
        /// the plan is, to fill the 9x9 board with numbers, and have a code to check each row and column and every 3x3
        /// day 1: trying to make a number generator from 1 - 9 that doesn't do duplicates for a couple rows
        /// day 2: got a row that generate 1-9 and doesn't do duplicates
        /// day 3: made a duplicate checker for columns but it keeps showing 1 attempts lol (i wish)
        /// </summary>
        /// <param name="args"></param>
        static void Main(string[] args)
        {
            List<int> godnum = new List<int>();
            int[,] array1 = new int[9, 9];
            Random rnd = new Random();
            int numtaker = 0;
            int attempts = 0;
            int checker = 0;
            bool failure = false;
            bool success = false;

            while (success == false)
            {
                attempts++;

                for (int x = 0; x < 9; x++)
                {
                    godnum.Clear();
                    for (int nums = 1; nums < 10; nums++)
                        godnum.Add(nums);

                    for (int y = 0; y < 9; y++)
                    {
                        numtaker = rnd.Next(0, godnum.Count);
                        array1[x, y] = godnum[numtaker];
                        godnum.RemoveAt(numtaker);
                    }

                }

                for (int y = 0; y < 9; y++)
                {
                    godnum.Add(array1[0, y]);
                }

                checker = 0;
                failure = false;

                while (checker < 72)
                {

                    for (int x = 1; x < 9; x++)
                    {
                        int dubs = 0;
                        for (int ccheck = 0; ccheck < 9; ccheck++)
                        {
                            if (array1[x, ccheck] == godnum[dubs])
                            {
                                failure = true;
                                break;
                            }
                            else
                            {
                                dubs++;
                            }
                        }
                        if (failure == true)
                            break;
                    }
                    if (failure == true)
                        break;
                    else
                        checker++;
                }
                if (checker == 72)
                    success = false;
                Console.WriteLine("an attempt");
            }
                    
            Console.WriteLine("it took " + attempts + " attempts to get this board!");

            for (int rows = 0; rows < 9; rows++)
            {
                for (int cols = 0; cols < 9; cols++)
                {
                    Console.Write(array1[rows, cols] + "\t");
                }
                Console.WriteLine();
            }
                     
            Console.ReadKey();

        }
    }
}
