using System;
using System.Collections.Generic;
using System.Data.SqlTypes;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace scratch
{

    /// <summary>
    /// new logic lets go (03/22)
    /// i dont think this new way works (0/24
    /// an infinite loop problem p1 (03/25)
    /// Infinite loop problem p2 (03/26)
    /// why only showing zero?!?!
    /// IT WAS THE FUCKIGN BOOL
    /// it works! ezpz
    /// </summary>
    internal class Program
    {
        static void Main(string[] args)
        {
            int go = 0;
            int high = 0;
            int low = 9999;
            int total = 0;
            while (go > -1)
            { 

                List<int> godnums = new List<int>();
                int[,] sacredarrays = new int[9, 9];
                Random rnd = new Random();
                int tempnum = 0;
                int randnum = 0;
                int cols = 0;
                int rows = 0;
                int limit = 81;
                int attempts = 0;
                int xplace = -1;
                int yplace = -1;
                int xcell = 0;
                int ycell = 0;
                int newnumloop = 100;

                bool failure = false;
                bool success = false;
                bool newnum = false;
                bool colschecker = false;
                bool rowschecker = false;
                bool cellchecker = false;

                while (success == false)
                {
                    sacredarrays = new int[9, 9];
                    xcell = 0;
                    ycell = 0;
                    xplace = -1;
                    yplace = -1;
                    limit = 81;
                    failure = false; //the problem

                    for (int x = 0; x < 9; x++)
                    {
                        godnums.Clear();
                        for (int m = 1; m < 10; m++)
                            godnums.Add(m);

                        xplace++;
                        if (xplace > 0)
                            yplace = -1;


                        for (int y = 0; y < 9; y++)
                        {
                            newnumloop = 100;
                            newnum = false;
                            randnum = rnd.Next(0, godnums.Count);
                            tempnum = godnums[randnum];
                            yplace++;
                        newnum:
                            if (newnum == true)
                            {
                                randnum = rnd.Next(0, godnums.Count);
                                tempnum = godnums[randnum];
                                newnumloop--;
                            }
                            cols = 0;

                            for (int q = 0; q < 9; q++)
                            {
                                colschecker = false;
                                if (sacredarrays[xplace, cols] == tempnum)
                                    colschecker = true;
                                if (colschecker == true)
                                {

                                    if (godnums.Count == 0)
                                    {
                                        failure = true;
                                        break;
                                    }
                                    if (newnumloop == 0)
                                    {
                                        failure = true;
                                        break;
                                    }
                                    else
                                    {
                                        newnum = true;
                                        goto newnum;
                                    }
                                }
                                cols++;
                            }
                            if (failure == true)
                                break;

                            rows = 0;
                            for (int p = 0; p < 9; p++)
                            {

                                rowschecker = false;
                                if (sacredarrays[rows, yplace] == tempnum)
                                    rowschecker = true;
                                if (rowschecker == true)
                                {
                                    if (godnums.Count == 0)
                                    {
                                        failure = true;
                                        break;
                                    }
                                    if (newnumloop == 0)
                                    {
                                        failure = true;
                                        break;
                                    }
                                    else
                                    {
                                        newnum = true;
                                        goto newnum;
                                    }
                                }
                                rows++;
                            }
                            if (failure == true)
                                break;

                            xcell = (x / 3) * 3;
                            ycell = (y / 3) * 3;

                            for (int k = 0; k < 3; k++)
                            {
                                for (int l = 0; l < 3; l++)
                                {
                                    cellchecker = false;
                                    if (sacredarrays[xcell, ycell] == tempnum)
                                        cellchecker = true;
                                    if (cellchecker == true)
                                    {
                                        if (godnums.Count == 0)
                                        {
                                            failure = true;
                                            break;
                                        }
                                        if (newnumloop == 0)
                                        {
                                            failure = true;
                                            break;
                                        }
                                        else
                                        {
                                            newnum = true;
                                            goto newnum;
                                        }
                                    }
                                    ycell++;
                                }
                                if (failure == true)
                                    break;

                                xcell++;
                                ycell -= 3;
                            }
                            if (failure == true)
                                break;

                            if (rowschecker == false && colschecker == false && cellchecker == false)
                            {
                                sacredarrays[x, y] = tempnum;
                                godnums.RemoveAt(randnum);
                                limit--;
                            }

                        }
                        if (failure == true)
                            break;

                    }
                    if (limit == 0)
                    {
                        success = true;
                    }
                    else
                    {
                        attempts++;                       
                    }

                }

                for (int xx = 0; xx < sacredarrays.GetLength(0); xx++)
                {
                    for (int yy = 0; yy < sacredarrays.GetLength(1); yy++)
                    {
                        Console.Write(sacredarrays[xx, yy] + "       ");
                    }
                    Console.WriteLine();
                    Console.WriteLine();
                }
                Console.WriteLine("In only " + attempts + " attempts!!");
                go++;
                total = total + attempts;
                int average = total / go;
                if (attempts < low)
                    low = attempts;
                if (attempts > high)
                    high = attempts;
                Console.WriteLine("Average attempts: " + average + " | " + "Highest attempts: " + high + " | " + "Lowest attempts: " + low + " | " + "Boards generated: " + go + " | ");
                Console.ReadKey();
            }

        }
    }
}
